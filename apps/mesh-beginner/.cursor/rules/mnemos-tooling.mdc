---
alwaysApply: true
description: Mnemos project tooling catalogue with explanations
---

# Mnemos Tooling Reference

This living document enumerates the key frameworks, libraries, and services we rely on throughout the Mnemos project. Keep it up to date whenever a new tool is introduced.

| Tool                                | Purpose & Why We Use It                                                                                                                                                                                          |
| ----------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **Next.js**                         | React framework offering hybrid static/server rendering, route-based code-splitting, built-in image optimisation, and a first-class developer experience. Powers the Mnemos website & docs.                      |
| **TypeScript**                      | Statically-typed superset of JavaScript that catches bugs at compile-time and provides rich IDE autocompletion. Enabled in `strict` mode project-wide.                                                           |
| **Tailwind CSS**                    | Utility-first CSS framework for rapidly building responsive, accessible UIs while keeping CSS footprint small.                                                                                                   |
| **MeshJS**                          | Cardano SDK for JavaScript/TypeScript. Exposes wallet integration, transaction building, smart-contract interaction, and on-chain data helpers. Fundamental for any blockchain logic in the guides and examples. |
| **Husky**                           | Git hooks manager used to run automated checks (lint, tests, type-check) before commits/pushes, enforcing code quality at the source.                                                                            |
| **lint-staged**                     | Executes linters only on files staged for commit, keeping pre-commit hooks fast while guaranteeing consistent quality.                                                                                           |
| **ESLint**                          | Linter for identifying problematic patterns and enforcing our code style & best-practice rules. Configured with the Next.js + TypeScript recommended presets.                                                    |
| **Prettier**                        | Opinionated formatter ensuring a consistent style across the codebase; runs via Husky pre-commit hook.                                                                                                           |
| **Jest**                            | JavaScript testing framework for unit and integration tests; integrates with React Testing Library.                                                                                                              |
| **React Testing Library**           | Testing utilities that encourage testing React components from the userâ€™s perspective rather than implementation details.                                                                                        |
| **Playwright**                      | Cross-browser end-to-end testing framework used for critical user-flow verification and CI smoke checks.                                                                                                         |
| **Renovate**                        | Automated dependency-update bot that keeps packages up to date via pull requests.                                                                                                                                |
| **Dependabot**                      | GitHub-native alternative to Renovate; we may use one or the other depending on repo settings.                                                                                                                   |
| **Zod**                             | Type-safe schema validation & parsing library employed for runtime validation of user input and API payloads.                                                                                                    |
| **DOMPurify**                       | HTML sanitizer safeguarding against XSS when injecting user-supplied markup.                                                                                                                                     |
| **Sentry**                          | Error-tracking & performance-monitoring platform for catching exceptions in production and staging.                                                                                                              |
| **Datadog**                         | Observability suite (logs, metrics, traces) leveraged for deeper monitoring in later phases.                                                                                                                     |
| **Blockfrost API**                  | Third-party Cardano API service used in examples to fetch on-chain data without running a full node.                                                                                                             |
| **DexHunter / Taptools / Charlie3** | Additional Cardano ecosystem APIs showcased in advanced examples for DeFi, market data, and oracle interactions.                                                                                                 |

> **Updating this list**: Whenever a new dependency, service, or CLI tool becomes part of the workflow, append a new row with a concise but informative explanation. This ensures newcomers understand the moving parts of the stack.
